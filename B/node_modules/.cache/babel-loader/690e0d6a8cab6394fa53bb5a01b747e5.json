{"ast":null,"code":"var _jsxFileName = \"/Users/tringuyen/learning/mindx-test/B/src/components/Content.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { RiArrowRightFill } from 'react-icons/ri';\nimport { useDispatch } from 'react-redux';\nimport { typeButtons } from '../constant';\nimport { shortenLink } from '../redux/actions/link.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Content = _ref => {\n  _s();\n\n  let {\n    typeShorten,\n    setTypeShorten\n  } = _ref;\n  const [url, setUrl] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    setUrl(e.target.value);\n  };\n\n  const handleShortenLink = () => {\n    dispatch(shortenLink(url));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Link Shortener\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__form-inputlink\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter a link: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"example.com\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleShortenLink,\n          children: [\" \", /*#__PURE__*/_jsxDEV(RiArrowRightFill, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 53\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__form-linktype\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Short domain: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this), typeButtons.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTypeShorten({\n            id: item.id,\n            type: item.type\n          }),\n          className: typeShorten.id === item.id ? 'selected' : '',\n          children: item.type\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 22\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__desc\",\n      children: \"With this free Link Shortener you can make Links shorter and easier to remember. Just enter a Link into the form and click on the above Button to generate a short Link. When visiting the short-Link, the short-Link will immediately redirect you to the long Link.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Content, \"1QbKiYzkfxzjJEtJtUNkHmKR3VA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/tringuyen/learning/mindx-test/B/src/components/Content.js"],"names":["useState","RiArrowRightFill","useDispatch","typeButtons","shortenLink","Content","typeShorten","setTypeShorten","url","setUrl","dispatch","handleChange","e","target","value","handleShortenLink","map","item","id","type"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,+BAA5B;;;AAEA,MAAMC,OAAO,GAAG,QAAqC;AAAA;;AAAA,MAApC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAoC;AAClD,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMU,QAAQ,GAAGR,WAAW,EAA5B;;AAGA,QAAMS,YAAY,GAAGC,CAAC,IAAI;AACvBH,IAAAA,MAAM,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACF,GAFD;;AAGA,QAAMC,iBAAiB,GAAG,MAAM;AAC7BL,IAAAA,QAAQ,CAACN,WAAW,CAACI,GAAD,CAAZ,CAAR;AACF,GAFD;;AAGA,sBACG;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACG;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAO,UAAA,WAAW,EAAC,aAAnB;AAAiC,UAAA,QAAQ,EAAEG;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFH,eAGG;AAAQ,UAAA,OAAO,EAAEI,iBAAjB;AAAA,uCAAqC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,kBAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHH;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAMG;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,gCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,EAGMZ,WAAW,CAACa,GAAZ,CAAiBC,IAAD,iBACb;AAAQ,UAAA,OAAO,EAAE,MAAMV,cAAc,CAAC;AAAEW,YAAAA,EAAE,EAAED,IAAI,CAACC,EAAX;AAAeC,YAAAA,IAAI,EAAEF,IAAI,CAACE;AAA1B,WAAD,CAArC;AACG,UAAA,SAAS,EAAEb,WAAW,CAACY,EAAZ,KAAmBD,IAAI,CAACC,EAAxB,GAA6B,UAA7B,GAA0C,EADxD;AAAA,oBAIID,IAAI,CAACE;AAJT,WAEQF,IAAI,CAACC,EAFb;AAAA;AAAA;AAAA;AAAA,gBADH,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA,cANH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,eAsBG;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AA+BF,CA1CD;;GAAMb,O;UAEcH,W;;;KAFdG,O;AA2CN,eAAeA,OAAf","sourcesContent":["import { useState } from 'react'\nimport { RiArrowRightFill } from 'react-icons/ri'\nimport { useDispatch } from 'react-redux'\nimport { typeButtons } from '../constant'\nimport { shortenLink } from '../redux/actions/link.actions'\n\nconst Content = ({ typeShorten, setTypeShorten }) => {\n   const [url, setUrl] = useState('')\n   const dispatch = useDispatch()\n\n   \n   const handleChange = e => {\n      setUrl(e.target.value)\n   }\n   const handleShortenLink = () => {\n      dispatch(shortenLink(url))\n   }\n   return (\n      <div className=\"content\">\n         <h1>Link Shortener</h1>\n         <div className='content__form'>\n            <div className='content__form-inputlink'>\n               <label>Enter a link: </label>\n               <input placeholder=\"example.com\" onChange={handleChange} />\n               <button onClick={handleShortenLink}> <RiArrowRightFill /> </button>\n            </div>\n            <div className='content__form-linktype'>\n               <label>Short domain: </label>\n               {\n                  typeButtons.map((item) => (\n                     <button onClick={() => setTypeShorten({ id: item.id, type: item.type })}\n                        className={typeShorten.id === item.id ? 'selected' : ''}\n                        key={item.id}\n                     >\n                        {item.type}\n                     </button>\n                  ))\n               }\n            </div>\n         </div>\n         <div className='content__desc'>\n            With this free Link Shortener you can make Links shorter and easier to\n            remember. Just enter a Link into the form and click on the above Button to\n            generate a short Link. When visiting the short-Link, the short-Link will\n            immediately redirect you to the long Link.\n         </div>\n      </div>\n   )\n}\nexport default Content"]},"metadata":{},"sourceType":"module"}